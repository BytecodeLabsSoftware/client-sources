package arsenic.module.impl.exploit;

import arsenic.event.bus.Listener;
import arsenic.event.bus.annotations.EventLink;
import arsenic.event.impl.EventUpdate;
import arsenic.module.Module;
import arsenic.module.ModuleCategory;
import arsenic.module.ModuleInfo;
import arsenic.module.property.PropertyInfo;
import arsenic.module.property.impl.EnumProperty;
import arsenic.module.property.impl.doubleproperty.DoubleProperty;
import arsenic.module.property.impl.doubleproperty.DoubleValue;
import arsenic.utils.minecraft.MoveUtil;
import arsenic.utils.minecraft.PacketUtil;
import net.minecraft.network.play.client.C03PacketPlayer;

@ModuleInfo(name = "GodMode", category = ModuleCategory.Exploit)
public class GodMode extends Module {
    public final EnumProperty<gMode> godMode = new EnumProperty<>("Mode:", gMode.Vanilla);
    @PropertyInfo(reliesOn = "Mode:", value = "Vanilla")
    public final DoubleProperty minhealth = new DoubleProperty("Min Health", new DoubleValue(1, 20, 20, 1));
    @PropertyInfo(reliesOn = "Mode:", value = "Vanilla")
    public final DoubleProperty packets = new DoubleProperty("Update Speed", new DoubleValue(1, 100, 35, 1));
    boolean resetTimer = false;
    @EventLink
    public final Listener<EventUpdate.Pre> preListener = event -> {
        if (godMode.getValue() == gMode.Vanilla) {
            if (mc.thePlayer.getHealth() < minhealth.getValue().getInput()) {
                for (int i = 0; i < packets.getValue().getInput(); i++) {
                    PacketUtil.send(new C03PacketPlayer(event.isOnGround()));
                }
            }
        }
        if (godMode.getValue() == gMode.Test) {
            if (resetTimer) {
                mc.timer.timerSpeed = 1F;
                resetTimer = false;
            }
            if (mc.thePlayer.ticksExisted % 5 == 0) {
                resetTimer = true;
                mc.timer.timerSpeed = 0.98F;
                for (int i = 0; i <= 10; i++) {
                    mc.getNetHandler().addToSendQueue(new C03PacketPlayer(true));
                }
            }
        } else {
            if (MoveUtil.isMoving()) {
                mc.getNetHandler().addToSendQueue(new C03PacketPlayer(mc.thePlayer.onGround));
            }
        }
    };

    public enum gMode {
        Vanilla,
        Test
    }
}