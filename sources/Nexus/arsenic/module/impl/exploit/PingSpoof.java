package arsenic.module.impl.exploit;

import arsenic.event.bus.Listener;
import arsenic.event.bus.annotations.EventLink;
import arsenic.event.impl.EventPacket;
import arsenic.module.Module;
import arsenic.module.ModuleCategory;
import arsenic.module.ModuleInfo;
import arsenic.module.property.impl.doubleproperty.DoubleProperty;
import arsenic.module.property.impl.doubleproperty.DoubleValue;
import arsenic.utils.minecraft.PacketUtil;
import arsenic.utils.timer.MillisTimer;
import net.minecraft.network.Packet;
import net.minecraft.network.play.INetHandlerPlayClient;
import net.minecraft.network.play.server.S00PacketKeepAlive;
import net.minecraft.network.play.server.S03PacketTimeUpdate;

import java.util.concurrent.LinkedBlockingQueue;

@ModuleInfo(name = "PingSpoof", category = ModuleCategory.Exploit)
public class PingSpoof extends Module {
    private LinkedBlockingQueue<Packet<INetHandlerPlayClient>> packetss = new LinkedBlockingQueue<>();
    static MillisTimer delaytimer = new MillisTimer();
    public final DoubleProperty delay = new DoubleProperty("Delay", new DoubleValue(0, 5000, 3000, 100));
    @EventLink
    public final Listener<EventPacket.Incoming.Pre> preListener = e -> {
        if ((e.getPacket() instanceof S03PacketTimeUpdate || e.getPacket() instanceof S00PacketKeepAlive)) {
            packetss.add(e.getPacket());
            e.cancel();
        }
        if (delaytimer.hasElapsed((long) delay.getValue().getInput())) {
            clearPackets();
            delaytimer.reset();
        }
    };

    @Override
    protected void onEnable() {
        delaytimer.reset();
        super.onEnable();
    }
    private void clearPackets() {
        if (packetss == null) {
            return;
        }
        while (!packetss.isEmpty()) {
            PacketUtil.handlePacket(packetss.poll());
        }
    }
}
