package arsenic.module.impl.exploit;

import arsenic.event.bus.Listener;
import arsenic.event.bus.annotations.EventLink;
import arsenic.event.impl.EventPacket;
import arsenic.module.Module;
import arsenic.module.ModuleCategory;
import arsenic.module.ModuleInfo;
import arsenic.module.property.impl.EnumProperty;
import arsenic.utils.minecraft.BlinkUtils;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;

@ModuleInfo(name = "Disabler", category = ModuleCategory.Exploit)
public class Disabler extends Module {
    public final EnumProperty<dMode> disablerMode = new EnumProperty<>("Mode: ", dMode.Vulcan);
    int ticks;
    @EventLink
    public final Listener<EventPacket.OutGoing> outGoingListener = e -> {
        Packet packet = e.getPacket();
        if (disablerMode.getValue() == dMode.Vulcan) {
            if (packet instanceof C0FPacketConfirmTransaction) {
                C0FPacketConfirmTransaction C0F = (C0FPacketConfirmTransaction) packet;
                int transUID = C0F.getUid();
                if (transUID >= -25767 && transUID <= -24769) {
                    ticks++;
                    BlinkUtils.CancelMove(e);
                    if (ticks == 15) {
                        BlinkUtils.resetAll();
                    }
                } else if (transUID == -30000) {
                    e.cancel();
                }
            }
        }
        if (disablerMode.getValue() == dMode.Balance) {
            if (packet instanceof C03PacketPlayer) {
                C03PacketPlayer c03PacketPlayer = ((C03PacketPlayer) packet);

                if (!c03PacketPlayer.getRotating() && !c03PacketPlayer.isMoving()
                        && ((mc.thePlayer.posX == mc.thePlayer.lastTickPosX && mc.thePlayer.posY == mc.thePlayer.lastTickPosY && mc.thePlayer.posZ == mc.thePlayer.lastTickPosZ))
                ) {
                    e.setCancelled(true);
                }
            }
        }
    };


    @Override
    protected void onEnable() {
        ticks = 0;
        super.onEnable();
    }

    public enum dMode {
        Vulcan,
        Balance
    }
}
