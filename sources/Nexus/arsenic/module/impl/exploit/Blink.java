package arsenic.module.impl.exploit;

import arsenic.event.bus.Listener;
import arsenic.event.bus.annotations.EventLink;
import arsenic.event.impl.EventPacket;
import arsenic.module.Module;
import arsenic.module.ModuleCategory;
import arsenic.module.ModuleInfo;
import arsenic.module.property.impl.BooleanProperty;
import arsenic.module.property.impl.EnumProperty;
import arsenic.utils.minecraft.BlinkUtils;
import net.minecraft.client.entity.EntityOtherPlayerMP;

@ModuleInfo(name = "Blink", category = ModuleCategory.Exploit)
public class Blink extends Module {
    public final EnumProperty<bMode> blinkmode = new EnumProperty<>("Mode:", bMode.Move);
    public final BooleanProperty player = new BooleanProperty("Spawn Player", false);
    public EntityOtherPlayerMP blinkEntity;
    @EventLink
    public final Listener<EventPacket.OutGoing> onPacket = e -> {
        if (blinkmode.getValue() == bMode.All) {
            BlinkUtils.CancelAll(e);
        }
        if (blinkmode.getValue() == bMode.Move) {
            BlinkUtils.CancelMove(e);
        }
        if (blinkmode.getValue() == bMode.Other) {
            BlinkUtils.CancelOther(e);
        }
    };

    @Override
    protected void onDisable() {
        if (player.getValue()) {
            deSpawnEntity();
        }
        BlinkUtils.resetAll();
    }

    @Override
    protected void onEnable() {
        if (player.getValue()) {
            spawnEntity();
        }
        super.onEnable();
    }

    public enum bMode {
        Move,
        All,
        Other,
        None
    }

    public void deSpawnEntity() {
        if (blinkEntity != null) {
            mc.theWorld.removeEntityFromWorld(blinkEntity.getEntityId());
            blinkEntity = null;
        }
    }

    public void spawnEntity() {
        if (blinkEntity == null) {
            blinkEntity = new EntityOtherPlayerMP(mc.theWorld, mc.thePlayer.getGameProfile());
            blinkEntity.setPositionAndRotation(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, mc.thePlayer.rotationYaw, mc.thePlayer.rotationPitch);
            blinkEntity.rotationYawHead = mc.thePlayer.rotationYawHead;
            blinkEntity.setSprinting(mc.thePlayer.isSprinting());
            blinkEntity.setInvisible(mc.thePlayer.isInvisible());
            blinkEntity.setSneaking(mc.thePlayer.isSneaking());
            blinkEntity.inventory = mc.thePlayer.inventory;
            mc.theWorld.addEntityToWorld(blinkEntity.getEntityId(), blinkEntity);
        }
    }
}