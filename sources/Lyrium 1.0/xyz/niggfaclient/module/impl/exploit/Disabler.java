// 
// Decompiled by Procyon v0.5.36
// 

package xyz.niggfaclient.module.impl.exploit;

import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import xyz.niggfaclient.utils.player.MoveUtils;
import net.minecraft.network.play.client.C0CPacketInput;
import net.minecraft.network.play.server.S12PacketEntityVelocity;
import xyz.niggfaclient.utils.other.Printer;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import xyz.niggfaclient.utils.network.PacketUtil;
import xyz.niggfaclient.events.impl.PacketEvent;
import xyz.niggfaclient.events.impl.MotionEvent;
import xyz.niggfaclient.eventbus.annotations.EventLink;
import xyz.niggfaclient.events.impl.LoadWorldEvent;
import xyz.niggfaclient.eventbus.Listener;
import xyz.niggfaclient.utils.other.TimerUtil;
import net.minecraft.network.Packet;
import java.util.LinkedList;
import xyz.niggfaclient.property.impl.EnumProperty;
import xyz.niggfaclient.module.Category;
import xyz.niggfaclient.module.ModuleInfo;
import xyz.niggfaclient.module.Module;

@ModuleInfo(name = "Disabler", description = "Disables some servers AntiCheat", cat = Category.EXPLOIT)
public class Disabler extends Module
{
    private final EnumProperty<Mode> mode;
    private final LinkedList<Packet<?>> packets;
    private final TimerUtil timer;
    private boolean doneLagback;
    @EventLink
    private final Listener<LoadWorldEvent> loadWorldEventListener;
    @EventLink
    private final Listener<MotionEvent> motionEventListener;
    @EventLink
    private final Listener<PacketEvent> packetEventListener;
    
    public Disabler() {
        this.mode = new EnumProperty<Mode>("Mode", Mode.VerusScaffold);
        this.packets = new LinkedList<Packet<?>>();
        this.timer = new TimerUtil();
        this.loadWorldEventListener = (e -> {
            this.doneLagback = false;
            this.packets.clear();
            this.timer.reset();
            return;
        });
        this.motionEventListener = (e -> {
            if (this.mc.thePlayer.ticksExisted < 5 || !this.mc.getNetHandler().doneLoadingTerrain) {
                this.packets.clear();
                this.timer.reset();
                return;
            }
            else {
                if (e.isPre()) {
                    switch (this.mode.getValue()) {
                        case VerusCombat: {
                            if (this.mc.thePlayer.ticksExisted % 180 == 0) {
                                while (this.packets.size() > 22) {
                                    PacketUtil.sendPacketNoEvent(this.packets.get(0));
                                    this.packets.remove(0);
                                }
                                break;
                            }
                            else {
                                break;
                            }
                            break;
                        }
                    }
                }
                return;
            }
        });
        S08PacketPlayerPosLook s08;
        S12PacketEntityVelocity s9;
        C03PacketPlayer c03;
        C08PacketPlayerBlockPlacement c4;
        this.packetEventListener = (e -> {
            if (e.getState() == PacketEvent.State.RECEIVE) {
                switch (this.mode.getValue()) {
                    case Watchdog: {
                        if (e.getPacket() instanceof S08PacketPlayerPosLook) {
                            s08 = (S08PacketPlayerPosLook)e.getPacket();
                            if (this.mc.getNetHandler().doneLoadingTerrain) {
                                s08.setY(s08.getY() - 1.0);
                                PacketUtil.sendPacketNoEvent(new C03PacketPlayer.C06PacketPlayerPosLook(this.mc.thePlayer.posX, s08.getY(), this.mc.thePlayer.posZ, this.mc.thePlayer.rotationYaw, this.mc.thePlayer.rotationPitch, false));
                                this.doneLagback = true;
                                Printer.addMessage("Ohio Boss (-1)");
                            }
                        }
                        if (e.getPacket() instanceof S12PacketEntityVelocity) {
                            s9 = (S12PacketEntityVelocity)e.getPacket();
                            if (s9.getEntityID() == this.mc.thePlayer.getEntityId()) {
                                PacketUtil.sendPacketNoEvent(new C0CPacketInput(0.0f, 0.0f, this.mc.thePlayer.movementInput.jump, this.mc.thePlayer.movementInput.sneak));
                                Printer.addMessage("Ohio Boss (Velocity Check)");
                                break;
                            }
                            else {
                                break;
                            }
                        }
                        else {
                            break;
                        }
                        break;
                    }
                }
            }
            if (e.getState() == PacketEvent.State.SEND) {
                switch (this.mode.getValue()) {
                    case Watchdog: {
                        if (e.getPacket() instanceof C03PacketPlayer) {
                            c03 = (C03PacketPlayer)e.getPacket();
                            if (this.doneLagback) {
                                c03.setOnGround(false);
                                Printer.addMessage("Ohio Boss (1)");
                            }
                            if (!this.timer.hasElapsed(450L)) {
                                c03.setY(c03.getY() - 22.0 * MoveUtils.getRandomHypixelValues());
                                this.timer.resetWithOffset(150L);
                                Printer.addMessage("Ohio Boss (2)");
                            }
                        }
                        if (e.getPacket() instanceof C0BPacketEntityAction) {
                            e.setCancelled();
                            break;
                        }
                        else {
                            break;
                        }
                        break;
                    }
                    case VerusScaffold: {
                        if (e.getPacket() instanceof C08PacketPlayerBlockPlacement) {
                            c4 = (C08PacketPlayerBlockPlacement)e.getPacket();
                            c4.facingY = -0.1f;
                            c4.stack = null;
                            break;
                        }
                        else {
                            break;
                        }
                        break;
                    }
                    case VerusCombat: {
                        if (e.getPacket() instanceof C0FPacketConfirmTransaction) {
                            e.setCancelled();
                            this.packets.add(e.getPacket());
                        }
                        if (e.getPacket() instanceof C00PacketKeepAlive) {
                            e.setCancelled();
                            this.packets.add(e.getPacket());
                        }
                        if (e.getPacket() instanceof C0BPacketEntityAction) {
                            e.setCancelled();
                            break;
                        }
                        else {
                            break;
                        }
                        break;
                    }
                }
            }
        });
    }
    
    @Override
    public void onEnable() {
        super.onEnable();
        this.timer.reset();
        this.packets.clear();
        this.doneLagback = false;
    }
    
    @Override
    public void onDisable() {
        super.onDisable();
        this.timer.reset();
        this.packets.clear();
    }
    
    public enum Mode
    {
        Watchdog, 
        VerusScaffold, 
        VerusCombat;
    }
}
