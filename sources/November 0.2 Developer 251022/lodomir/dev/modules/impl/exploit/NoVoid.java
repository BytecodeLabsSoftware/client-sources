/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.eventbus.Subscribe
 */
package lodomir.dev.modules.impl.exploit;

import com.google.common.eventbus.Subscribe;
import lodomir.dev.November;
import lodomir.dev.event.impl.EventMotion;
import lodomir.dev.modules.Category;
import lodomir.dev.modules.Module;
import lodomir.dev.settings.ModeSetting;
import lodomir.dev.settings.NumberSetting;
import lodomir.dev.ui.notification.Notification;
import lodomir.dev.ui.notification.NotificationManager;
import lodomir.dev.ui.notification.NotificationType;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.util.Vec3;

public class NoVoid
extends Module {
    public ModeSetting mode = new ModeSetting("Mode", "Flag", "Flag", "Pos", "Jump", "Test");
    private final NumberSetting fall = new NumberSetting("Fall Distance", 1.0, 10.0, 5.0, 0.1);
    private Vec3 lastGround = new Vec3(0.0, 0.0, 0.0);
    private boolean saved;

    public NoVoid() {
        super("NoVoid", 0, Category.EXPLOIT);
        this.addSettings(this.mode, this.fall);
    }

    @Override
    public void onDisable() {
        this.saved = false;
        super.onDisable();
    }

    @Subscribe
    public void onMotion(EventMotion event) {
        if (NoVoid.mc.thePlayer.onGround) {
            this.lastGround = new Vec3(NoVoid.mc.thePlayer.posX, NoVoid.mc.thePlayer.posY, NoVoid.mc.thePlayer.posZ);
        }
        if (!(!((double)NoVoid.mc.thePlayer.fallDistance > this.fall.getValue()) || NoVoid.mc.gameSettings.keyBindSneak.isKeyDown() || NoVoid.mc.thePlayer.capabilities.isFlying || November.INSTANCE.getModuleManager().getModule("Fly").isEnabled() || November.INSTANCE.getModuleManager().getModule("HighJump").isEnabled())) {
            if (!this.saved) {
                switch (this.mode.getMode()) {
                    case "Flag": {
                        this.sendPacket(new C03PacketPlayer.C04PacketPlayerPosition());
                        break;
                    }
                    case "Pos": {
                        event.setY(event.getY() + (double)NoVoid.mc.thePlayer.fallDistance);
                        break;
                    }
                    case "Jump": {
                        NoVoid.mc.thePlayer.jump();
                        break;
                    }
                }
            }
            if (!this.saved) {
                NotificationManager.show(new Notification(NotificationType.INFO, "NoVoid", "Attempted to save you from void", 1));
                this.saved = true;
            }
        } else {
            this.saved = false;
        }
    }
}

