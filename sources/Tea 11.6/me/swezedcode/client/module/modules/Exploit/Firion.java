package me.swezedcode.client.module.modules.Exploit;

import java.util.Objects;

import org.lwjgl.input.Keyboard;

import com.darkmagician6.eventapi.EventListener;

import me.swezedcode.client.module.ModCategory;
import me.swezedcode.client.module.Module;
import me.swezedcode.client.utils.events.EventPreMotionUpdates;
import net.minecraft.block.Block;
import net.minecraft.block.BlockAir;
import net.minecraft.block.BlockLiquid;
import net.minecraft.client.Minecraft;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.potion.Potion;
import net.minecraft.potion.PotionEffect;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.util.MathHelper;
import net.minecraft.util.Vec3;

public class Firion extends Module {

	public Firion() {
		super("Firion", Keyboard.KEY_NONE, 0xFFF51D28, ModCategory.Exploit);
	}

	@EventListener
	public void onTick(EventPreMotionUpdates e) {
		if (isOnLiquid()) {
			return;
		}
		if (Minecraft.thePlayer.isPotionActive(Potion.blindness.getId())) {
			Minecraft.thePlayer.removePotionEffect(Potion.blindness.getId());
		}
		if (Minecraft.thePlayer.isPotionActive(Potion.confusion.getId())) {
			Minecraft.thePlayer.removePotionEffect(Potion.confusion.getId());
		}
		if (Minecraft.thePlayer.isPotionActive(Potion.digSlowdown.getId())) {
			Minecraft.thePlayer.removePotionEffect(Potion.digSlowdown.getId());
		}
		if (Minecraft.thePlayer.isBurning()) {
			this.mc.getNetHandler().addToSendQueue(new C03PacketPlayer());
		}
		Potion[] potionTypes;
		int length = (potionTypes = Potion.potionTypes).length;
		for (int i = 0; i < length; i++) {
			Potion potion = potionTypes[i];
			if ((Objects.nonNull(potion)) && (potion.isBadEffect()) && (Minecraft.thePlayer.isPotionActive(potion))) {
				PotionEffect effect = Minecraft.thePlayer.getActivePotionEffect(potion);
				for (int x = 0; x < effect.getDuration() / 20; x++) {
					this.mc.getNetHandler().addToSendQueue(new C03PacketPlayer());
				}
			}
		}
	}

	public static boolean isOnLiquid() {
		Minecraft.getMinecraft();
		AxisAlignedBB par1AxisAlignedBB = Minecraft.thePlayer.boundingBox.offset(0.0D, -0.01D, 0.0D).contract(0.001D,
				0.001D, 0.001D);
		int var4 = MathHelper.floor_double(par1AxisAlignedBB.minX);
		int var5 = MathHelper.floor_double(par1AxisAlignedBB.maxX + 1.0D);
		int var6 = MathHelper.floor_double(par1AxisAlignedBB.minY);
		int var7 = MathHelper.floor_double(par1AxisAlignedBB.maxY + 1.0D);
		int var8 = MathHelper.floor_double(par1AxisAlignedBB.minZ);
		int var9 = MathHelper.floor_double(par1AxisAlignedBB.maxZ + 1.0D);
		new Vec3(0.0D, 0.0D, 0.0D);
		for (int var12 = var4; var12 < var5; var12++) {
			for (int var13 = var6; var13 < var7; var13++) {
				for (int var14 = var8; var14 < var9; var14++) {
					Minecraft.getMinecraft();
					Block var15 = Minecraft.theWorld.getBlock(var12, var13, var14);
					if ((!(var15 instanceof BlockAir)) && (!(var15 instanceof BlockLiquid))) {
						return false;
					}
				}
			}
		}
		return true;
	}

	@Override
	public void onEnable() {
	}

}
