package com.polarware.module.impl.exploit;

import com.polarware.event.annotations.EventLink;
import com.polarware.event.bus.Listener;
import com.polarware.event.impl.motion.PreUpdateEvent;
import com.polarware.event.impl.network.PacketReceiveEvent;
import com.polarware.event.impl.network.PacketSendEvent;
import com.polarware.module.Module;
import com.polarware.module.api.Category;
import com.polarware.module.api.ModuleInfo;
import com.polarware.value.impl.BooleanValue;
import com.viaversion.viarewind.utils.PacketUtil;
import com.viaversion.viaversion.api.Via;
import com.viaversion.viaversion.api.protocol.packet.PacketWrapper;
import com.viaversion.viaversion.api.type.Type;
import net.minecraft.item.ItemSword;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import com.viaversion.viarewind.protocol.protocol1_8to1_9.Protocol1_8To1_9;

@ModuleInfo(name = "Via Version Fix", description = "Via Version fixsssssss", category = Category.EXPLOIT)
public class ViaVersionFixModule extends Module {
    private final BooleanValue blocking = new BooleanValue("Blocking", this, false);
    private final BooleanValue place = new BooleanValue("Place", this, false);

    @EventLink()
    public final Listener<PreUpdateEvent> onPreUpdate = event -> {
        if (blocking.getValue()) {
            if (mc.thePlayer.isBlocking() && mc.thePlayer.getHeldItem() != null && mc.thePlayer.getHeldItem().getItem() instanceof ItemSword) {
                PacketWrapper useItem = PacketWrapper.create(29, null, Via.getManager().getConnectionManager().getConnections().iterator().next());
                useItem.write(Type.VAR_INT, 1);
                PacketUtil.sendToServer(useItem, Protocol1_8To1_9.class, true, true);
                mc.getNetHandler().addToSendQueue(new C08PacketPlayerBlockPlacement(mc.thePlayer.inventory.getCurrentItem()));
            }
        }
    };

    @EventLink()
    public final Listener<PacketSendEvent> onPacketSend = event -> {
        if (place.getValue()) {
            final Packet<?> packet = event.getPacket();
            if (packet instanceof C08PacketPlayerBlockPlacement) {
                ((C08PacketPlayerBlockPlacement) packet).facingX = 0.5F;
                ((C08PacketPlayerBlockPlacement) packet).facingY = 0.5F;
                ((C08PacketPlayerBlockPlacement) packet).facingZ = 0.5F;
            }
        }
    };

}
