package net.minecraft.init;

import net.minecraft.block.*;
import net.minecraft.util.*;

public class Blocks
{
    public static final Block wool;
    public static final Block stonebrick;
    public static final Block end_portal_frame;
    public static final Block lit_redstone_ore;
    public static final Block glowstone;
    public static final Block acacia_stairs;
    public static final BlockCauldron cauldron;
    public static final Block light_weighted_pressure_plate;
    public static final Block stone;
    public static final Block web;
    public static final Block melon_stem;
    public static final Block planks;
    public static final Block lit_pumpkin;
    public static final Block standing_sign;
    public static final Block nether_brick;
    public static final BlockFire fire;
    public static final Block melon_block;
    public static final Block ladder;
    public static final Block iron_trapdoor;
    public static final Block farmland;
    public static final Block dropper;
    public static final Block hay_block;
    public static final BlockChest chest;
    public static final Block nether_brick_fence;
    public static final Block stone_pressure_plate;
    public static final BlockPistonBase sticky_piston;
    public static final BlockDynamicLiquid flowing_water;
    public static final Block dark_oak_fence;
    public static final Block log2;
    public static final Block brown_mushroom_block;
    public static final BlockGrass grass;
    public static final Block birch_fence;
    public static final BlockSlab wooden_slab;
    public static final Block brewing_stand;
    public static final Block red_sandstone_stairs;
    public static final Block diamond_block;
    public static final Block birch_stairs;
    public static final Block diamond_ore;
    public static final Block cocoa;
    public static final Block dirt;
    public static final BlockSand sand;
    public static final Block bedrock;
    public static final BlockFlower red_flower;
    public static final BlockRedstoneRepeater unpowered_repeater;
    public static final Block obsidian;
    public static final BlockDaylightDetector daylight_detector_inverted;
    public static final Block jukebox;
    public static final Block end_portal;
    public static final BlockRedstoneComparator powered_comparator;
    public static final Block furnace;
    public static final Block acacia_door;
    public static final Block snow_layer;
    public static final Block clay;
    public static final Block spruce_stairs;
    public static final Block monster_egg;
    public static final Block prismarine;
    public static final BlockSlab double_stone_slab;
    public static final BlockPistonExtension piston_head;
    public static final Block vine;
    public static final Block potatoes;
    public static final Block stone_button;
    public static final Block wooden_button;
    public static final BlockSlab stone_slab;
    public static final Block waterlily;
    public static final Block anvil;
    public static final Block glass;
    public static final Block cobblestone;
    public static final Block stone_brick_stairs;
    public static final BlockPortal portal;
    public static final BlockDoublePlant double_plant;
    public static final BlockMycelium mycelium;
    public static final Block sponge;
    public static final Block gold_block;
    public static final Block iron_bars;
    public static final BlockCactus cactus;
    public static final Block sandstone_stairs;
    public static final Block trapped_chest;
    public static final Block emerald_block;
    public static final Block acacia_fence_gate;
    public static final Block ender_chest;
    public static final BlockReed reeds;
    public static final Block trapdoor;
    public static final Block spruce_fence_gate;
    public static final BlockLeaves leaves;
    public static final Block slime_block;
    public static final BlockBush brown_mushroom;
    public static final Block wheat;
    public static final BlockStaticLiquid water;
    public static final Block gold_ore;
    public static final Block barrier;
    public static final Block snow;
    public static final Block heavy_weighted_pressure_plate;
    public static final BlockSlab double_wooden_slab;
    public static final Block sapling;
    public static final BlockTripWireHook tripwire_hook;
    public static final Block lapis_ore;
    public static final Block spruce_door;
    public static final Block cake;
    public static final Block nether_brick_stairs;
    public static final BlockStainedGlassPane stained_glass_pane;
    public static final Block lapis_block;
    public static final Block lit_furnace;
    public static final Block jungle_stairs;
    public static final BlockDynamicLiquid flowing_lava;
    public static final Block gravel;
    public static final Block redstone_ore;
    public static final BlockBush red_mushroom;
    public static final Block packed_ice;
    public static final Block carrots;
    public static final BlockSlab double_stone_slab2;
    public static final Block iron_door;
    public static final Block oak_door;
    public static final Block iron_ore;
    public static final BlockRedstoneRepeater powered_repeater;
    public static final Block glass_pane;
    public static final Block oak_fence_gate;
    public static final Block red_mushroom_block;
    public static final Block coal_block;
    public static final Block pumpkin;
    public static final Block noteblock;
    public static final Block dragon_egg;
    public static final Block coal_ore;
    public static final Block bookshelf;
    public static final Block jungle_fence_gate;
    public static final Block acacia_fence;
    public static final Block oak_stairs;
    public static final Block torch;
    public static final BlockDeadBush deadbush;
    public static final Block dark_oak_stairs;
    public static final Block carpet;
    public static final BlockPistonBase piston;
    public static final Block golden_rail;
    public static final Block enchanting_table;
    public static final Block unlit_redstone_torch;
    public static final Block quartz_block;
    public static final Block jungle_fence;
    public static final Block flower_pot;
    public static final BlockDaylightDetector daylight_detector;
    public static final BlockRedstoneComparator unpowered_comparator;
    public static final Block brick_stairs;
    public static final Block lit_redstone_lamp;
    public static final Block ice;
    public static final Block rail;
    public static final BlockStaticLiquid lava;
    public static final Block crafting_table;
    public static final Block quartz_ore;
    public static final Block wooden_pressure_plate;
    public static final Block tnt;
    public static final Block quartz_stairs;
    public static final BlockSlab stone_slab2;
    public static final Block redstone_lamp;
    public static final Block sea_lantern;
    public static final BlockPistonMoving piston_extension;
    public static final Block wall_sign;
    public static final Block netherrack;
    public static final Block lever;
    public static final Block activator_rail;
    public static final Block jungle_door;
    public static final BlockHopper hopper;
    public static final Block log;
    public static final BlockBeacon beacon;
    public static final Block hardened_clay;
    public static final Block iron_block;
    public static final Block air;
    public static final Block command_block;
    public static final Block mossy_cobblestone;
    public static final Block nether_wart;
    public static final Block brick_block;
    public static final Block cobblestone_wall;
    public static final Block sandstone;
    public static final Block pumpkin_stem;
    private static final String[] I;
    public static final Block dispenser;
    public static final Block birch_door;
    public static final Block standing_banner;
    public static final Block dark_oak_door;
    public static final Block red_sandstone;
    public static final Block spruce_fence;
    public static final Block stone_stairs;
    public static final BlockFlower yellow_flower;
    public static final Block birch_fence_gate;
    public static final Block detector_rail;
    public static final BlockLeaves leaves2;
    public static final Block redstone_torch;
    public static final BlockRedstoneWire redstone_wire;
    public static final BlockSkull skull;
    public static final Block bed;
    public static final Block end_stone;
    public static final Block dark_oak_fence_gate;
    public static final Block emerald_ore;
    public static final Block oak_fence;
    public static final Block stained_hardened_clay;
    public static final Block tripwire;
    public static final Block redstone_block;
    public static final Block wall_banner;
    public static final Block soul_sand;
    public static final BlockStainedGlass stained_glass;
    public static final Block mob_spawner;
    public static final BlockTallGrass tallgrass;
    
    private static String I(final String s, final String s2) {
        final StringBuilder sb = new StringBuilder();
        final char[] charArray = s2.toCharArray();
        int length = "".length();
        final char[] charArray2 = s.toCharArray();
        final int length2 = charArray2.length;
        int i = "".length();
        while (i < length2) {
            sb.append((char)(charArray2[i] ^ charArray[length % charArray.length]));
            ++length;
            ++i;
            "".length();
            if (3 == -1) {
                throw null;
            }
        }
        return sb.toString();
    }
    
    private static void I() {
        (I = new String[37 + 194 - 163 + 131])["".length()] = I("6'\u0005 \u0015\u0004!\u0002e$\u001b+\u0005.\u0015W&\u0003#\t\u0005!F\u0007\t\u00180\u00151\u0014\u00164G", "wDfEf");
        Blocks.I[" ".length()] = I("\u0012\"6", "sKDPW");
        Blocks.I["  ".length()] = I("\u00181\u0017?$", "kExQA");
        Blocks.I["   ".length()] = I("\r>$<#", "jLEOP");
        Blocks.I[0xAC ^ 0xA8] = I("(\r\u0000\"", "LdrVX");
        Blocks.I[0xC ^ 0x9] = I("/!\u00037%)=\u0015:')", "LNaUI");
        Blocks.I[0x88 ^ 0x8E] = I("\u001a\u000b/>\u0002\u0019", "jgNPi");
        Blocks.I[0x42 ^ 0x45] = I("\t\u0010\u001b/(\u0014\u0016", "zqkCA");
        Blocks.I[0x6F ^ 0x67] = I("\u0013\u0000\u0013\u0015\t\u0012\u000e", "qewgf");
        Blocks.I[0x2B ^ 0x22] = I("$5\u001a5\u001d,>*5\u00156<\u0007", "BYuBt");
        Blocks.I[0xA7 ^ 0xAD] = I("\u001a2'30", "mSSVB");
        Blocks.I[0xAE ^ 0xA5] = I("\u000e\u0004&\u0016\"\u0006\u000f\u0016\r*\u001e\t", "hhIaK");
        Blocks.I[0x82 ^ 0x8E] = I("\u0018/#\u000e", "tNUoF");
        Blocks.I[0xCA ^ 0xC7] = I("9'\u0014\u001d", "JFzyP");
        Blocks.I[0x13 ^ 0x1D] = I("5<31\u0001>", "RNRGd");
        Blocks.I[0x7B ^ 0x74] = I("\u000f'\n\u0003.\u0007:\u0003", "hHfgq");
        Blocks.I[0x66 ^ 0x76] = I("-\u0017-\u000f\u000e+\u0017'", "DeBaQ");
        Blocks.I[0x5E ^ 0x4F] = I("1=\u001365= \u0017", "RRrZj");
        Blocks.I[0x80 ^ 0x92] = I(".\u0000=", "BoZgE");
        Blocks.I[0x90 ^ 0x83] = I("\t'\u0006^", "eHalF");
        Blocks.I[0x82 ^ 0x96] = I("8#\u000f\u0013\u001f'", "TFnez");
        Blocks.I[0xA2 ^ 0xB7] = I("\u0018 \u0018$\n\u0007w", "tEyRo");
        Blocks.I[0x3E ^ 0x28] = I("\")(\b+4", "QYGfL");
        Blocks.I[0x23 ^ 0x34] = I("6&+7\u0004", "QJJDw");
        Blocks.I[0x89 ^ 0x91] = I("\u0015\u000f\u0000;\u0012&\u0001\u00027", "ynpRa");
        Blocks.I[0x41 ^ 0x58] = I("%'4\u000b5\u0016$(\r%\"", "IFDbF");
        Blocks.I[0xAF ^ 0xB5] = I("&\u0002&\u0019\u000e,\u00180\u001b", "BkUik");
        Blocks.I[0x3F ^ 0x24] = I("$ :>*#.:?", "WATZY");
        Blocks.I[0x7C ^ 0x60] = I(",-\u001b&(.-\f(", "BBoCJ");
        Blocks.I[0x42 ^ 0x5F] = I(" 1%", "BTAAf");
        Blocks.I[0x7B ^ 0x65] = I("\u000b,=\u001c\u000e\u0002\u001c#\u0019\u0002\u0000", "lCQxk");
        Blocks.I[0x38 ^ 0x27] = I(">.\u0006\u0015\u0014.$\u0000/\u0005;\"\u001e", "ZKrpw");
        Blocks.I[0x50 ^ 0x70] = I("  \f,'*\u000b\u0015&?';\u000b", "STeOL");
        Blocks.I[0xB8 ^ 0x99] = I("\u0003$\f", "tAnsV");
        Blocks.I[0x55 ^ 0x77] = I("\u0006\u00008#\u0014\u0000\u0000'<", "raTOs");
        Blocks.I[0x33 ^ 0x10] = I("\t\u0011\u0013+\u0016\u0018\u0007\u001a", "mtrOt");
        Blocks.I[0x42 ^ 0x66] = I("<\r\u001c#\u001c\"", "LdoWs");
        Blocks.I[0x55 ^ 0x70] = I("\u0013\u000b+\u0016#\r=0\u0007-\u0007", "cbXbL");
        Blocks.I[0xE3 ^ 0xC5] = I("\u0019?''", "nPHKw");
        Blocks.I[0x63 ^ 0x44] = I("\u0016%#=&\b\u001351=\u0003\"# &\b", "fLPII");
        Blocks.I[0x4F ^ 0x67] = I("\u00126%\"?\u001c\f/\"?\u001c6;", "kSINP");
        Blocks.I[0x47 ^ 0x6E] = I("94\u001d;4'>\u000e\u0001 ", "KQydR");
        Blocks.I[0x73 ^ 0x59] = I("\r3::\u001a0, >\u001c\u001d.: ", "oAUMt");
        Blocks.I[0xB1 ^ 0x9A] = I("\u0016'5\u0015\n\u0011198\b\u000b/", "dBQJg");
        Blocks.I[0x79 ^ 0x55] = I("\u001d\u0003\u0016#\u000b\u0018\u0000\u0015$?", "zlzGT");
        Blocks.I[0x90 ^ 0xBD] = I("$\u0004\u001c>\u0012/\u001a\u001c3&", "MvsPM");
        Blocks.I[0x34 ^ 0x1A] = I("+!4\u0007\u0014*\u00112\u0011\u0017!+\u001e\u0016\u0014.,", "ONAex");
        Blocks.I[0x56 ^ 0x79] = I("\u001c\u0018\u0015\u001e\n0\u001f\u0016\u0011\r", "olzpo");
        Blocks.I[0x23 ^ 0x13] = I("8\u0019\n:)\u0005\t\u000f6!1", "ZkcYB");
        Blocks.I[0x9 ^ 0x38] = I("\u001f\f\u0004", "kbpAJ");
        Blocks.I[0x7C ^ 0x4E] = I("6'\u0015\f%<-\u0016\u0001", "THzgV");
        Blocks.I[0x6 ^ 0x35] = I("5%\u001b\u001a(\u0007)\u0007\u000b34/\u001b\u001d>6/", "XJhiQ");
        Blocks.I[0x9D ^ 0xA9] = I("\"7\u0014*\u000e$4\t", "MUgCj");
        Blocks.I[0xBF ^ 0x8A] = I("&\u001b\u0015\u000b ", "RtghH");
        Blocks.I[0xF7 ^ 0xC1] = I(")&%\u000f", "OOWjT");
        Blocks.I[0x9F ^ 0xA8] = I("\u0018\"\u001a\b\u0004\u0005,\u000f9\u0012\u0007", "uMxWw");
        Blocks.I[0xB ^ 0x33] = I(">913\t%93\u001e\t", "QXZlz");
        Blocks.I[0x28 ^ 0x11] = I("$: \n$", "GREyP");
        Blocks.I[0xAE ^ 0x94] = I("\u0016,\u0005\u0015\u0000\u000b'\u00049\u0003\r;\u0004", "dIaft");
        Blocks.I[0x8A ^ 0xB1] = I("\u001e#\u0012\u001c5\u0014.,\u001e(\u001f", "zJsqZ");
        Blocks.I[0xA0 ^ 0x9C] = I("+\u000f5.\u0015!\u0002\u000b!\u0016 \u0005?", "OfTCz");
        Blocks.I[0xAB ^ 0x96] = I(" ?\u0019\u000f7*#\u001f67\"/\u0014\f", "CMxiC");
        Blocks.I[0x17 ^ 0x29] = I("0=\u0015\u0017#", "GUpvW");
        Blocks.I[0x3B ^ 0x4] = I("\u0002%\u0002\u001e\u000b\u0005*\u0014", "dDpsg");
        Blocks.I[0x8 ^ 0x48] = I("\n8\u001b7.\u000f(", "lMiYO");
        Blocks.I[0x5 ^ 0x44] = I("\u0007\u001d%)\u001f\u001e\u0006?\u0017\u001a\u000e", "ktQvy");
        Blocks.I[0x51 ^ 0x13] = I("\"\u001d\u0004%18\u0007\u0002\u0014&8\u000e\u000b", "QieKU");
        Blocks.I[0x4D ^ 0xE] = I("\u001e\u001f\u0017*\u001c\u0007/\u001c!\u0016\u001b", "ipxNy");
        Blocks.I[0x2 ^ 0x46] = I("\u0015\b\u0000\u0003*\u0003'\u0016\u0019&\u0014", "fxrvI");
        Blocks.I[0x6 ^ 0x43] = I("\t-;7\u00054 &;\u001f", "kDITm");
        Blocks.I[0x6C ^ 0x2A] = I("(\u0010!\u0001(':+\t+0", "BeOfD");
        Blocks.I[0x4 ^ 0x43] = I("\u0003\n8)?\u00036=%9\u0010", "biYJV");
        Blocks.I[0x5D ^ 0x15] = I(")\u0013\n\u0005\u000f\"\u0013\u001314\"\u001d\n", "MrxnP");
        Blocks.I[0x1 ^ 0x48] = I("\u00057\u000b\u000e\r\u001b", "iVojh");
        Blocks.I[0xE6 ^ 0xAC] = I(":0\u000f%", "HQfIJ");
        Blocks.I[0xEE ^ 0xA5] = I("#=?+\u0001\u000f:$$\r\":", "PIPEd");
        Blocks.I[0xEA ^ 0xA6] = I("\u0005\u0005\n9\u0010\u0001\r\u0001;", "rdfUO");
        Blocks.I[0xEE ^ 0xA3] = I("=#\u000e\u0000\u0018", "QFxej");
        Blocks.I[0x49 ^ 0x7] = I("\u0005\u0005\u0018'\u001f)\u0001\u0005,\t\u0005\u0004\u0005,%\u0006\u001d\u0016=\u001f", "vqwIz");
        Blocks.I[0xCC ^ 0x83] = I("/!\u000b)-\"<\u000b5", "FSdGr");
        Blocks.I[0x2E ^ 0x7E] = I("\u0013!-5\b\n\u00112#\b\u0017=7#\b;>.0\u0019\u0001", "dNBQm");
        Blocks.I[0x95 ^ 0xC4] = I(":3#\u0016\u0011'8\":\n:3", "HVGee");
        Blocks.I[0x48 ^ 0x1A] = I("\u001b\u001186\u001d\u0012\u001c?\u001d\u0000\u0019\u001d\u0013\u0006\u001d\u0012", "wxLio");
        Blocks.I[0xC7 ^ 0x94] = I("\u0011+\u0007%,;7\u000e(+\u0010*\u0005)\u0007\u0010*\u0019/0", "dEkLX");
        Blocks.I[0xD3 ^ 0x87] = I("3\u001167\u0013.\u001a7\u001b\u0013.\u00061,", "AtRDg");
        Blocks.I[0x7F ^ 0x2A] = I("\u001c\u0001>\u001d00\u0017$\u0007!\u0000\u001b", "ouQsU");
        Blocks.I[0xEA ^ 0xBC] = I("2\u0017>\u000f\u0005-\u0018(\u001d(", "AyQxZ");
        Blocks.I[0xD1 ^ 0x86] = I("/\u0000\n", "FcopC");
        Blocks.I[0x75 ^ 0x2D] = I("=&\f\u0001", "NHcvb");
        Blocks.I[0x23 ^ 0x7A] = I(".-\u00049\u0018>", "MLgMm");
        Blocks.I[0x1E ^ 0x44] = I("\u0002:5\u0011", "aVThy");
        Blocks.I[0x33 ^ 0x68] = I("\u0005\u0013\u00131#", "wvvUP");
        Blocks.I[0xDF ^ 0x83] = I("\u0004!\u001e\u00076\u0001,", "nTubT");
        Blocks.I[0xDD ^ 0x80] = I("\u000f,'\u0017#", "iIItF");
        Blocks.I[0xD9 ^ 0x87] = I("\u0001:<\"\"\u0017\u0015(2/\u0011/", "rJNWA");
        Blocks.I[0xF ^ 0x50] = I("3:\u00155\u000e\u000e5\u00028\u00054", "QSgVf");
        Blocks.I[0xF8 ^ 0x98] = I("\u0000>\u0003\u00024\u000f\u0014\u000b\u00006\t.", "jKmeX");
        Blocks.I[0x14 ^ 0x75] = I("\b\u00050\u000e\u001d\u0003\u0005):$\t\n!\u0000", "ldBeB");
        Blocks.I[0x62 ^ 0x0] = I("\u0007/8\u000b-\u0007\u0013?\r*\u0005)", "fLYhD");
        Blocks.I[0x2A ^ 0x49] = I(":%\u0003#&#>", "JPnSM");
        Blocks.I[0x58 ^ 0x3C] = I("\t\u0006\r\u00041\u0015\u0011\u0018\u000f?", "gcylT");
        Blocks.I[0x2B ^ 0x4E] = I("\u0007+,\u0015\u0014\u0007%7\u001d", "tDYyK");
        Blocks.I[0x64 ^ 0x2] = I("\u0000&\u000310\u0013%\u0002#", "gJlFC");
        Blocks.I[0xA ^ 0x6D] = I(" +\u001c\f\u0018<", "PDnxy");
        Blocks.I[0xCC ^ 0xA4] = I("9\u0003\u00021\u0016 \u0007\u0006\u0005\u000f;", "Ujvnf");
        Blocks.I[0x35 ^ 0x5C] = I("\u0000\u0015&!", "ctMDc");
        Blocks.I[0x2B ^ 0x41] = I("2-8\u001d\u0012\"1-\u0016:5&8\u0017\u00043&:", "GCHre");
        Blocks.I[0x20 ^ 0x4B] = I("\u0017\u0002<\u001c!\u0002\t\u0014\u000b6\u0017\b*\r6\u0015", "gmKyS");
        Blocks.I[0x9 ^ 0x65] = I("\f5*\u0019\u000b\u0017(9", "xGKio");
        Blocks.I[0xE8 ^ 0x85] = I("7\u001d\u0004\u001f\u0013?\u00005\t\u0000=", "Zrjlg");
        Blocks.I[0x9 ^ 0x67] = I("\u00058%/*\u0014>#\"$", "vLJAO");
        Blocks.I[0xF2 ^ 0x9D] = I("\u0015\u0010(\u0014\f(\u000f2\u0010\n\u0005\r(\u000e=\u0015\u000e(\u0000\t", "wbGcb");
        Blocks.I[0x35 ^ 0x45] = I("&+6\u001c<!=:1>;#\r!=;-9", "TNRCQ");
        Blocks.I[0x16 ^ 0x67] = I("\";\u001f:8)(\u0002'", "KIpTg");
        Blocks.I[0x0 ^ 0x72] = I("-\u001d4\u001c9\u0015\u00014\u0001/", "JqUoJ");
        Blocks.I[0x6A ^ 0x19] = I(";\u0017\u001b\u0017\"\t\u0010\u001b\u0017/=", "VrwxL");
        Blocks.I[0x71 ^ 0x5] = I("\u001e1\u001e*\u001e\u0007*,)\u0001\u000b)", "nDsZu");
        Blocks.I[0x21 ^ 0x54] = I("8\"\b<'\n4\u00106$", "UGdSI");
        Blocks.I[0xE4 ^ 0x92] = I("\u0017\n\u00051", "ackTa");
        Blocks.I[0x35 ^ 0x42] = I("\u0010\u0012\f\u0002 )\u0010\u0003\u0015 ", "vwbaE");
        Blocks.I[0x12 ^ 0x6A] = I("\u0003\u001f:\u0005\u0001\u00150.\u0015\f\u0013\n\u0017\u0017\u0003\u0004\n", "poHpb");
        Blocks.I[0xD7 ^ 0xAE] = I("29\u0019'\u0001\u000f6\u000e*\n5\u000f\f%\u001d5", "PPkDi");
        Blocks.I[0x53 ^ 0x29] = I(">\f=$\u00181&5&\u001a7\u001c\f$\u0015 \u001c", "TySCt");
        Blocks.I[0x1 ^ 0x7A] = I("\r\u0010\u0010'=\u0006\u0010\t\u0013\u0004\f\u001f\u0001)=\u000e\u0010\u0016)", "iqbLb");
        Blocks.I[0xC7 ^ 0xBB] = I("\u000f4\u0002\u0002\u0018\u000f\b\u0005\u0004\u001f\r2<\u0006\u0010\u001a2", "nWcaq");
        Blocks.I[0x2C ^ 0x51] = I(",\u001332.\u0011\u0012.0,<\u0012", "NaZQE");
        Blocks.I[0x4D ^ 0x33] = I("\u0006\u001b-\u0019\u0001*\r0\u001e\u0007\u001e01\u0003\u0005\u001c\u001d1", "uoBwd");
        Blocks.I[123 + 0 - 39 + 43] = I("=\b6)'9\u00048", "PqULK");
        Blocks.I[36 + 78 + 11 + 3] = I("83?3\b#;'/", "ORKVz");
        Blocks.I[2 + 97 - 70 + 100] = I("\u0004 8+\u0010\u0018\u001a.1\u001c\t.", "jELCu");
        Blocks.I[41 + 101 - 100 + 88] = I(")\u0015\"\u001e\u00135/4\u0004\u001f$\u001b\t\u0010\u0013)\u00133", "GpVvv");
        Blocks.I[117 + 128 - 189 + 75] = I("\u00025\u000e2&\u001e\u000f\u0018(*\u000f;%)7\r9\b)", "lPzZC");
        Blocks.I[15 + 57 - 14 + 74] = I("9\b\u000e,*%2\r%=#", "WmzDO");
        Blocks.I[63 + 41 + 3 + 26] = I(".=\u00152%%'\u001f4#\u0014'\u00178(.", "KSvZD");
        Blocks.I[65 + 6 - 18 + 81] = I("\u0003\u0014\u001f;:\u000f\u0001%?'\u0000\b\u001e", "afzLS");
        Blocks.I[132 + 84 - 201 + 120] = I("\u00110\u0013\u0006>\u0000>\b", "rQfjZ");
        Blocks.I[86 + 109 - 146 + 87] = I("\t\u0001\u0012<\u0015\u0003\u001d\u0002\u0002\t", "lovce");
        Blocks.I[130 + 100 - 128 + 35] = I("$=\"3\u0019.!2\r\u0005\u001e54\r\u0004$", "ASFli");
        Blocks.I[21 + 20 + 81 + 16] = I("&\u0014,;)7\u0015&\u0001", "CzHdZ");
        Blocks.I[58 + 80 - 101 + 102] = I("!+'\u0000!+\u0006#\u0000)", "EYFgN");
        Blocks.I[73 + 42 - 82 + 107] = I("74\u0015\u0015\u0006*?\u00149\u001e$<\u0001", "EQqfr");
        Blocks.I[47 + 75 - 74 + 93] = I("\u0006:\u001c\u001c \u000f7\u001b7=\u000467/3\u0007#", "jShCR");
        Blocks.I[100 + 111 - 139 + 70] = I("*\n4\u0003\u0001+:6\u000e\u0002*\u0000/>\u001e\"\u0004#", "NeAam");
        Blocks.I[61 + 29 + 6 + 47] = I("\u0005>5\u0014\f\u001c\u000e)\u001c\b\u0010", "rQZpi");
        Blocks.I[30 + 139 - 142 + 117] = I("&\u000b+\u001e)", "EdHqH");
        Blocks.I[138 + 9 - 65 + 63] = I("\u0007\u0012\u0014\u0017\n\u0000\u001c\u0014\u0016&\u0007\u0007\u001b\u001a\u000b\u0007", "tszsy");
        Blocks.I[27 + 27 - 33 + 125] = I("\t\u0017)9,\u0000\u001e\u0013$?\t", "lzLKM");
        Blocks.I[72 + 135 - 166 + 106] = I("\b('\u0017:2%+\u0017;\u0019", "mFCrH");
        Blocks.I[14 + 36 + 40 + 58] = I("\f&\u0018$ \u0011&\u0014\u000b?\u0017;\u001a", "xTqTW");
        Blocks.I[88 + 118 - 94 + 37] = I("\u0019\u0007\u001b\u0007\u0016\u0004\u0007\u0017", "murwa");
        Blocks.I[39 + 29 - 9 + 91] = I("0\u0002\u001f#79\u000b%3::\f\u0011", "UozQV");
        Blocks.I[70 + 142 - 88 + 27] = I("?\u001d\u0006\u0012\u0000)2\u0007\u0013\u0002%\u001f\u0007", "Lmtgc");
        Blocks.I[149 + 99 - 136 + 40] = I("\u001a$8\u000e\u0005'>>\f\u0004\n>", "xMJmm");
        Blocks.I[26 + 1 + 107 + 19] = I("=;\u0001,/2\u0011\u001c?\"><\u001c", "WNoKC");
        Blocks.I[100 + 81 - 70 + 43] = I("1\f4=\u0017<\u0007\u00062\u001a=\u00002", "RcYPv");
        Blocks.I[59 + 29 - 83 + 150] = I("(-6\u0000\u0000$", "JHWco");
        Blocks.I[5 + 41 - 36 + 146] = I("\u001a\r&\u0004\u0019\u001c\u00110\t\u001b\u001c=3\u0007\u0019\u0015", "ybDfu");
        Blocks.I[56 + 141 - 42 + 2] = I("*(\u000b\u001d\u0014>\u001b\u0014\u0005\u0005", "LDdjq");
        Blocks.I[76 + 22 - 94 + 154] = I("\u000f\u0007*>5\u0018\u0015", "lfXLZ");
        Blocks.I[127 + 113 - 201 + 120] = I(")\"5\u000e\u00006(2", "YMAot");
        Blocks.I[27 + 29 + 11 + 93] = I("-\u001f\r-34/\u0000<\".\u001f\f", "ZpbIV");
        Blocks.I[36 + 145 - 85 + 65] = I("\u0016\u00026).", "eiCEB");
        Blocks.I[126 + 143 - 122 + 15] = I("\u0012(\u0017-\u0001", "sFaDm");
        Blocks.I[46 + 124 - 36 + 29] = I(",11$\u0000='\u000f7\u0018=0$", "XCPTp");
        Blocks.I[131 + 29 - 26 + 30] = I("\u001b8\u0000),(&\u0002(?\u001f%\u0002%\u0007\u0007#\u00022+\u0002#\u0002\u001e(\u001b0\u0013$", "wQgAX");
        Blocks.I[58 + 4 + 91 + 12] = I(",/'\u001c \u001b=#\u0003>,>#\u000e\u000648#\u0019*18#5)(+2\u000f", "DJFjY");
        Blocks.I[147 + 40 - 143 + 122] = I("\r<\u0001\u001d\u0002\u001d \u0014\u0016*\u001b=\u001c\u0002\u0014\n3\u0005\u001d\u0007", "xRqru");
        Blocks.I[141 + 52 - 88 + 62] = I("9'\u0004\u001d\u0001,,,\u001b\u001c$8\u0012\n\u0012='\u0001", "IHsxs");
        Blocks.I[142 + 73 - 172 + 125] = I("\u0017\u000e+'(\u0014\u0007&\u0014%\u0016\u001b7(5\u001c\u001d", "soRKA");
        Blocks.I[53 + 42 - 46 + 120] = I("\n\u0000<\u0019-\t\t1* \u000b\u0015 \u00160\u0001\u0013\u001a\u001c*\u0018\u00047\u0001!\n", "naEuD");
        Blocks.I[116 + 33 - 34 + 55] = I("\u001b25\u0011\u0007\u000694=\u0011\u000582\t", "iWQbs");
        Blocks.I[73 + 159 - 176 + 115] = I("9\u0001\r$!2+\u0003$0", "HtlVU");
        Blocks.I[28 + 100 - 94 + 138] = I("\u001c\u000e9=\u0014\u0006", "taIMq");
        Blocks.I[115 + 48 - 30 + 40] = I("\u0010/04\u0000\u001b\u00053*\u001b\u00021", "aZQFt");
        Blocks.I[123 + 97 - 161 + 115] = I("\u000b;\u0013\u001b9\u0000\u0011\u0001\u001d,\u0013<\u0001", "zNriM");
        Blocks.I[130 + 36 - 153 + 162] = I("(\f\u001a\u0000\u001b(\u001b\u0001\u001b2;\u000e\u0007\u0005", "Ionim");
        Blocks.I[107 + 129 - 141 + 81] = I("#6\u0019\b?\"6", "GDvxO");
        Blocks.I[40 + 154 - 164 + 147] = I("0\" %\u0019&2\u001e$\u001612$\"\u0012'\t\" \u0016:", "CVALw");
        Blocks.I[57 + 143 - 190 + 168] = I("\u0005\"\u001d\u0006\u0011\u00021", "gCotx");
        Blocks.I[79 + 33 - 25 + 92] = I("\u001b\u001d\u00008\u0013\u0006\u001d\u000e&(\u001d\u0000\u001d", "rooVL");
        Blocks.I[95 + 67 - 57 + 75] = I(".$\n1!**\u0010\u0005", "FEsnC");
        Blocks.I[148 + 21 - 132 + 144] = I("\t \u0000?\u001f\u001e", "jArOz");
        Blocks.I[66 + 58 - 71 + 129] = I("\r\u0010\u0010\u000e1\u000b\u0014\u000657\t\u0010\u001b", "eqbjT");
        Blocks.I[86 + 176 - 135 + 56] = I("\u001b\u000554\u0013\u001a\u0006;;'", "xjTXL");
        Blocks.I[35 + 73 + 40 + 36] = I("4(//& \u0016%'&", "DILDC");
        Blocks.I[58 + 56 - 106 + 177] = I("\"\u001b\u0006\u000b<\"'\u0014\u001c4*\n\u0014", "CxghU");
        Blocks.I[3 + 139 - 80 + 124] = I("/+\u0016\u0006($+\u000f2\u0004?+\r\u001f\u0004", "KJdmw");
        Blocks.I[125 + 158 - 195 + 99] = I("&\"%\u0018\b", "UNLum");
        Blocks.I[105 + 70 - 166 + 179] = I("\u0011'2\u000b\u0004\u0010\u00177\u0005\t\u001b<", "uHGih");
        Blocks.I[176 + 6 - 22 + 29] = I("\u0004\r%\u0002\u001d\u0012\u001d\u001b\f\u001f\u0016\n7", "wyDks");
        Blocks.I[110 + 27 + 28 + 25] = I("\u0006\u001f\r\u0011$\u0010\u000f3\u001f&\u0014\u0018\u001f':\u0014\u0005\t", "uklxJ");
        Blocks.I[173 + 169 - 257 + 106] = I(">#\u0001\n\u0006/#\u0001\u0017\u000e", "NQhyk");
        Blocks.I[41 + 161 - 190 + 180] = I("\u0014\u0013 1+\u0006\u00185\u000b5\t", "gvAnG");
        Blocks.I[97 + 136 - 201 + 161] = I("\u0015\u000e\u0004\u00140\u000f\u0014\u0002%6\u0007\u0014\u000b\u001f&", "fzezT");
        Blocks.I[158 + 169 - 259 + 126] = I("4\u00144\t*!\u00146\u000b\u00101", "CuXeu");
        Blocks.I[167 + 71 - 220 + 177] = I("\u0000\u0000>\u0017'\u0013\u000b>; \u001d\u000b?", "reZHT");
        Blocks.I[23 + 41 + 62 + 70] = I(":\u000071\u0018)\u000b7\u001d\u001f'\u000b61\u0018<\u0004:\u001c\u0018", "HeSnk");
        Blocks.I[104 + 159 - 158 + 92] = I("\u000f\u00159\u001b\u0005\u000e%?\r\u0006\u0005\u001f\u0013\n\u0005\n\u0018~", "kzLyi");
        Blocks.I[126 + 106 - 52 + 18] = I("\u0006\u0016\u00026\b*\u0011\u00019\u000fG", "ubmXm");
    }
    
    private static Block getRegisteredBlock(final String s) {
        return Block.blockRegistry.getObject(new ResourceLocation(s));
    }
    
    static {
        I();
        if (!Bootstrap.isRegistered()) {
            throw new RuntimeException(Blocks.I["".length()]);
        }
        air = getRegisteredBlock(Blocks.I[" ".length()]);
        stone = getRegisteredBlock(Blocks.I["  ".length()]);
        grass = (BlockGrass)getRegisteredBlock(Blocks.I["   ".length()]);
        dirt = getRegisteredBlock(Blocks.I[0x62 ^ 0x66]);
        cobblestone = getRegisteredBlock(Blocks.I[0x2E ^ 0x2B]);
        planks = getRegisteredBlock(Blocks.I[0xAC ^ 0xAA]);
        sapling = getRegisteredBlock(Blocks.I[0x66 ^ 0x61]);
        bedrock = getRegisteredBlock(Blocks.I[0xBF ^ 0xB7]);
        flowing_water = (BlockDynamicLiquid)getRegisteredBlock(Blocks.I[0x8D ^ 0x84]);
        water = (BlockStaticLiquid)getRegisteredBlock(Blocks.I[0xAA ^ 0xA0]);
        flowing_lava = (BlockDynamicLiquid)getRegisteredBlock(Blocks.I[0x2C ^ 0x27]);
        lava = (BlockStaticLiquid)getRegisteredBlock(Blocks.I[0x9D ^ 0x91]);
        sand = (BlockSand)getRegisteredBlock(Blocks.I[0xA1 ^ 0xAC]);
        gravel = getRegisteredBlock(Blocks.I[0x72 ^ 0x7C]);
        gold_ore = getRegisteredBlock(Blocks.I[0x9A ^ 0x95]);
        iron_ore = getRegisteredBlock(Blocks.I[0x10 ^ 0x0]);
        coal_ore = getRegisteredBlock(Blocks.I[0x77 ^ 0x66]);
        log = getRegisteredBlock(Blocks.I[0x25 ^ 0x37]);
        log2 = getRegisteredBlock(Blocks.I[0x24 ^ 0x37]);
        leaves = (BlockLeaves)getRegisteredBlock(Blocks.I[0x9E ^ 0x8A]);
        leaves2 = (BlockLeaves)getRegisteredBlock(Blocks.I[0xA7 ^ 0xB2]);
        sponge = getRegisteredBlock(Blocks.I[0x6 ^ 0x10]);
        glass = getRegisteredBlock(Blocks.I[0x1B ^ 0xC]);
        lapis_ore = getRegisteredBlock(Blocks.I[0xDE ^ 0xC6]);
        lapis_block = getRegisteredBlock(Blocks.I[0x1B ^ 0x2]);
        dispenser = getRegisteredBlock(Blocks.I[0x91 ^ 0x8B]);
        sandstone = getRegisteredBlock(Blocks.I[0xA3 ^ 0xB8]);
        noteblock = getRegisteredBlock(Blocks.I[0x35 ^ 0x29]);
        bed = getRegisteredBlock(Blocks.I[0x70 ^ 0x6D]);
        golden_rail = getRegisteredBlock(Blocks.I[0x87 ^ 0x99]);
        detector_rail = getRegisteredBlock(Blocks.I[0xA ^ 0x15]);
        sticky_piston = (BlockPistonBase)getRegisteredBlock(Blocks.I[0x3 ^ 0x23]);
        web = getRegisteredBlock(Blocks.I[0x3 ^ 0x22]);
        tallgrass = (BlockTallGrass)getRegisteredBlock(Blocks.I[0xA3 ^ 0x81]);
        deadbush = (BlockDeadBush)getRegisteredBlock(Blocks.I[0xA6 ^ 0x85]);
        piston = (BlockPistonBase)getRegisteredBlock(Blocks.I[0x54 ^ 0x70]);
        piston_head = (BlockPistonExtension)getRegisteredBlock(Blocks.I[0xE7 ^ 0xC2]);
        wool = getRegisteredBlock(Blocks.I[0x62 ^ 0x44]);
        piston_extension = (BlockPistonMoving)getRegisteredBlock(Blocks.I[0x70 ^ 0x57]);
        yellow_flower = (BlockFlower)getRegisteredBlock(Blocks.I[0x43 ^ 0x6B]);
        red_flower = (BlockFlower)getRegisteredBlock(Blocks.I[0x98 ^ 0xB1]);
        brown_mushroom = (BlockBush)getRegisteredBlock(Blocks.I[0xBC ^ 0x96]);
        red_mushroom = (BlockBush)getRegisteredBlock(Blocks.I[0x8 ^ 0x23]);
        gold_block = getRegisteredBlock(Blocks.I[0x81 ^ 0xAD]);
        iron_block = getRegisteredBlock(Blocks.I[0x86 ^ 0xAB]);
        double_stone_slab = (BlockSlab)getRegisteredBlock(Blocks.I[0xAF ^ 0x81]);
        stone_slab = (BlockSlab)getRegisteredBlock(Blocks.I[0xB3 ^ 0x9C]);
        brick_block = getRegisteredBlock(Blocks.I[0x6B ^ 0x5B]);
        tnt = getRegisteredBlock(Blocks.I[0x9 ^ 0x38]);
        bookshelf = getRegisteredBlock(Blocks.I[0x29 ^ 0x1B]);
        mossy_cobblestone = getRegisteredBlock(Blocks.I[0x82 ^ 0xB1]);
        obsidian = getRegisteredBlock(Blocks.I[0x81 ^ 0xB5]);
        torch = getRegisteredBlock(Blocks.I[0x8E ^ 0xBB]);
        fire = (BlockFire)getRegisteredBlock(Blocks.I[0x61 ^ 0x57]);
        mob_spawner = getRegisteredBlock(Blocks.I[0x20 ^ 0x17]);
        oak_stairs = getRegisteredBlock(Blocks.I[0x63 ^ 0x5B]);
        chest = (BlockChest)getRegisteredBlock(Blocks.I[0x9C ^ 0xA5]);
        redstone_wire = (BlockRedstoneWire)getRegisteredBlock(Blocks.I[0x5B ^ 0x61]);
        diamond_ore = getRegisteredBlock(Blocks.I[0x74 ^ 0x4F]);
        diamond_block = getRegisteredBlock(Blocks.I[0x76 ^ 0x4A]);
        crafting_table = getRegisteredBlock(Blocks.I[0xA5 ^ 0x98]);
        wheat = getRegisteredBlock(Blocks.I[0x6D ^ 0x53]);
        farmland = getRegisteredBlock(Blocks.I[0x90 ^ 0xAF]);
        furnace = getRegisteredBlock(Blocks.I[0xD4 ^ 0x94]);
        lit_furnace = getRegisteredBlock(Blocks.I[0xEA ^ 0xAB]);
        standing_sign = getRegisteredBlock(Blocks.I[0xD7 ^ 0x95]);
        oak_door = getRegisteredBlock(Blocks.I[0xC3 ^ 0x80]);
        spruce_door = getRegisteredBlock(Blocks.I[0x72 ^ 0x36]);
        birch_door = getRegisteredBlock(Blocks.I[0x44 ^ 0x1]);
        jungle_door = getRegisteredBlock(Blocks.I[0x7 ^ 0x41]);
        acacia_door = getRegisteredBlock(Blocks.I[0xC3 ^ 0x84]);
        dark_oak_door = getRegisteredBlock(Blocks.I[0x1B ^ 0x53]);
        ladder = getRegisteredBlock(Blocks.I[0x67 ^ 0x2E]);
        rail = getRegisteredBlock(Blocks.I[0x6E ^ 0x24]);
        stone_stairs = getRegisteredBlock(Blocks.I[0x29 ^ 0x62]);
        wall_sign = getRegisteredBlock(Blocks.I[0x11 ^ 0x5D]);
        lever = getRegisteredBlock(Blocks.I[0xE5 ^ 0xA8]);
        stone_pressure_plate = getRegisteredBlock(Blocks.I[0xCF ^ 0x81]);
        iron_door = getRegisteredBlock(Blocks.I[0x88 ^ 0xC7]);
        wooden_pressure_plate = getRegisteredBlock(Blocks.I[0xC3 ^ 0x93]);
        redstone_ore = getRegisteredBlock(Blocks.I[0x1C ^ 0x4D]);
        lit_redstone_ore = getRegisteredBlock(Blocks.I[0x22 ^ 0x70]);
        unlit_redstone_torch = getRegisteredBlock(Blocks.I[0xE1 ^ 0xB2]);
        redstone_torch = getRegisteredBlock(Blocks.I[0xCB ^ 0x9F]);
        stone_button = getRegisteredBlock(Blocks.I[0x52 ^ 0x7]);
        snow_layer = getRegisteredBlock(Blocks.I[0x25 ^ 0x73]);
        ice = getRegisteredBlock(Blocks.I[0x4C ^ 0x1B]);
        snow = getRegisteredBlock(Blocks.I[0xDE ^ 0x86]);
        cactus = (BlockCactus)getRegisteredBlock(Blocks.I[0x48 ^ 0x11]);
        clay = getRegisteredBlock(Blocks.I[0x22 ^ 0x78]);
        reeds = (BlockReed)getRegisteredBlock(Blocks.I[0x3A ^ 0x61]);
        jukebox = getRegisteredBlock(Blocks.I[0xE6 ^ 0xBA]);
        oak_fence = getRegisteredBlock(Blocks.I[0x61 ^ 0x3C]);
        spruce_fence = getRegisteredBlock(Blocks.I[0x7D ^ 0x23]);
        birch_fence = getRegisteredBlock(Blocks.I[0xC7 ^ 0x98]);
        jungle_fence = getRegisteredBlock(Blocks.I[0x45 ^ 0x25]);
        dark_oak_fence = getRegisteredBlock(Blocks.I[0xE3 ^ 0x82]);
        acacia_fence = getRegisteredBlock(Blocks.I[0xC9 ^ 0xAB]);
        pumpkin = getRegisteredBlock(Blocks.I[0x3F ^ 0x5C]);
        netherrack = getRegisteredBlock(Blocks.I[0xE7 ^ 0x83]);
        soul_sand = getRegisteredBlock(Blocks.I[0xE3 ^ 0x86]);
        glowstone = getRegisteredBlock(Blocks.I[0x33 ^ 0x55]);
        portal = (BlockPortal)getRegisteredBlock(Blocks.I[0x53 ^ 0x34]);
        lit_pumpkin = getRegisteredBlock(Blocks.I[0x4A ^ 0x22]);
        cake = getRegisteredBlock(Blocks.I[0xC7 ^ 0xAE]);
        unpowered_repeater = (BlockRedstoneRepeater)getRegisteredBlock(Blocks.I[0x2C ^ 0x46]);
        powered_repeater = (BlockRedstoneRepeater)getRegisteredBlock(Blocks.I[0x26 ^ 0x4D]);
        trapdoor = getRegisteredBlock(Blocks.I[0xCA ^ 0xA6]);
        monster_egg = getRegisteredBlock(Blocks.I[0xDA ^ 0xB7]);
        stonebrick = getRegisteredBlock(Blocks.I[0x5F ^ 0x31]);
        brown_mushroom_block = getRegisteredBlock(Blocks.I[0x55 ^ 0x3A]);
        red_mushroom_block = getRegisteredBlock(Blocks.I[0xD ^ 0x7D]);
        iron_bars = getRegisteredBlock(Blocks.I[0x45 ^ 0x34]);
        glass_pane = getRegisteredBlock(Blocks.I[0x42 ^ 0x30]);
        melon_block = getRegisteredBlock(Blocks.I[0xFE ^ 0x8D]);
        pumpkin_stem = getRegisteredBlock(Blocks.I[0x75 ^ 0x1]);
        melon_stem = getRegisteredBlock(Blocks.I[0x57 ^ 0x22]);
        vine = getRegisteredBlock(Blocks.I[0x79 ^ 0xF]);
        oak_fence_gate = getRegisteredBlock(Blocks.I[0xCA ^ 0xBD]);
        spruce_fence_gate = getRegisteredBlock(Blocks.I[0xBC ^ 0xC4]);
        birch_fence_gate = getRegisteredBlock(Blocks.I[0xEB ^ 0x92]);
        jungle_fence_gate = getRegisteredBlock(Blocks.I[0xCF ^ 0xB5]);
        dark_oak_fence_gate = getRegisteredBlock(Blocks.I[0xC7 ^ 0xBC]);
        acacia_fence_gate = getRegisteredBlock(Blocks.I[0xE9 ^ 0x95]);
        brick_stairs = getRegisteredBlock(Blocks.I[0x3E ^ 0x43]);
        stone_brick_stairs = getRegisteredBlock(Blocks.I[0xD2 ^ 0xAC]);
        mycelium = (BlockMycelium)getRegisteredBlock(Blocks.I[21 + 105 - 104 + 105]);
        waterlily = getRegisteredBlock(Blocks.I[111 + 58 - 148 + 107]);
        nether_brick = getRegisteredBlock(Blocks.I[46 + 22 - 33 + 94]);
        nether_brick_fence = getRegisteredBlock(Blocks.I[124 + 46 - 100 + 60]);
        nether_brick_stairs = getRegisteredBlock(Blocks.I[130 + 72 - 163 + 92]);
        nether_wart = getRegisteredBlock(Blocks.I[117 + 85 - 153 + 83]);
        enchanting_table = getRegisteredBlock(Blocks.I[107 + 1 - 95 + 120]);
        brewing_stand = getRegisteredBlock(Blocks.I[49 + 9 + 17 + 59]);
        cauldron = (BlockCauldron)getRegisteredBlock(Blocks.I[43 + 126 - 67 + 33]);
        end_portal = getRegisteredBlock(Blocks.I[3 + 65 - 18 + 86]);
        end_portal_frame = getRegisteredBlock(Blocks.I[106 + 134 - 192 + 89]);
        end_stone = getRegisteredBlock(Blocks.I[53 + 62 - 83 + 106]);
        dragon_egg = getRegisteredBlock(Blocks.I[29 + 25 + 53 + 32]);
        redstone_lamp = getRegisteredBlock(Blocks.I[45 + 134 - 153 + 114]);
        lit_redstone_lamp = getRegisteredBlock(Blocks.I[75 + 19 + 39 + 8]);
        double_wooden_slab = (BlockSlab)getRegisteredBlock(Blocks.I[137 + 117 - 152 + 40]);
        wooden_slab = (BlockSlab)getRegisteredBlock(Blocks.I[57 + 73 - 114 + 127]);
        cocoa = getRegisteredBlock(Blocks.I[127 + 4 + 2 + 11]);
        sandstone_stairs = getRegisteredBlock(Blocks.I[62 + 72 - 113 + 124]);
        emerald_ore = getRegisteredBlock(Blocks.I[44 + 145 - 139 + 96]);
        ender_chest = getRegisteredBlock(Blocks.I[58 + 72 + 2 + 15]);
        tripwire_hook = (BlockTripWireHook)getRegisteredBlock(Blocks.I[36 + 83 - 87 + 116]);
        tripwire = getRegisteredBlock(Blocks.I[11 + 105 - 80 + 113]);
        emerald_block = getRegisteredBlock(Blocks.I[111 + 92 - 182 + 129]);
        spruce_stairs = getRegisteredBlock(Blocks.I[84 + 33 + 29 + 5]);
        birch_stairs = getRegisteredBlock(Blocks.I[29 + 35 + 52 + 36]);
        jungle_stairs = getRegisteredBlock(Blocks.I[93 + 106 - 174 + 128]);
        command_block = getRegisteredBlock(Blocks.I[15 + 90 + 43 + 6]);
        beacon = (BlockBeacon)getRegisteredBlock(Blocks.I[91 + 3 - 19 + 80]);
        cobblestone_wall = getRegisteredBlock(Blocks.I[126 + 72 - 122 + 80]);
        flower_pot = getRegisteredBlock(Blocks.I[19 + 2 + 84 + 52]);
        carrots = getRegisteredBlock(Blocks.I[150 + 81 - 162 + 89]);
        potatoes = getRegisteredBlock(Blocks.I[21 + 42 - 62 + 158]);
        wooden_button = getRegisteredBlock(Blocks.I[18 + 88 - 38 + 92]);
        skull = (BlockSkull)getRegisteredBlock(Blocks.I[139 + 33 - 24 + 13]);
        anvil = getRegisteredBlock(Blocks.I[116 + 149 - 219 + 116]);
        trapped_chest = getRegisteredBlock(Blocks.I[144 + 29 - 164 + 154]);
        light_weighted_pressure_plate = getRegisteredBlock(Blocks.I[39 + 84 - 100 + 141]);
        heavy_weighted_pressure_plate = getRegisteredBlock(Blocks.I[65 + 108 - 101 + 93]);
        unpowered_comparator = (BlockRedstoneComparator)getRegisteredBlock(Blocks.I[125 + 115 - 144 + 70]);
        powered_comparator = (BlockRedstoneComparator)getRegisteredBlock(Blocks.I[91 + 99 - 56 + 33]);
        daylight_detector = (BlockDaylightDetector)getRegisteredBlock(Blocks.I[59 + 160 - 100 + 49]);
        daylight_detector_inverted = (BlockDaylightDetector)getRegisteredBlock(Blocks.I[85 + 158 - 220 + 146]);
        redstone_block = getRegisteredBlock(Blocks.I[24 + 20 - 2 + 128]);
        quartz_ore = getRegisteredBlock(Blocks.I[55 + 33 + 59 + 24]);
        hopper = (BlockHopper)getRegisteredBlock(Blocks.I[41 + 117 - 56 + 70]);
        quartz_block = getRegisteredBlock(Blocks.I[116 + 127 - 241 + 171]);
        quartz_stairs = getRegisteredBlock(Blocks.I[160 + 45 - 182 + 151]);
        activator_rail = getRegisteredBlock(Blocks.I[56 + 103 - 36 + 52]);
        dropper = getRegisteredBlock(Blocks.I[152 + 113 - 202 + 113]);
        stained_hardened_clay = getRegisteredBlock(Blocks.I[60 + 162 - 190 + 145]);
        barrier = getRegisteredBlock(Blocks.I[5 + 104 + 15 + 54]);
        iron_trapdoor = getRegisteredBlock(Blocks.I[55 + 14 - 41 + 151]);
        hay_block = getRegisteredBlock(Blocks.I[42 + 33 + 74 + 31]);
        carpet = getRegisteredBlock(Blocks.I[93 + 148 - 164 + 104]);
        hardened_clay = getRegisteredBlock(Blocks.I[59 + 111 - 145 + 157]);
        coal_block = getRegisteredBlock(Blocks.I[47 + 11 + 114 + 11]);
        packed_ice = getRegisteredBlock(Blocks.I[66 + 11 - 19 + 126]);
        acacia_stairs = getRegisteredBlock(Blocks.I[30 + 3 + 119 + 33]);
        dark_oak_stairs = getRegisteredBlock(Blocks.I[57 + 73 + 37 + 19]);
        slime_block = getRegisteredBlock(Blocks.I[91 + 112 - 58 + 42]);
        double_plant = (BlockDoublePlant)getRegisteredBlock(Blocks.I[147 + 89 - 130 + 82]);
        stained_glass = (BlockStainedGlass)getRegisteredBlock(Blocks.I[32 + 146 - 55 + 66]);
        stained_glass_pane = (BlockStainedGlassPane)getRegisteredBlock(Blocks.I[60 + 26 + 2 + 102]);
        prismarine = getRegisteredBlock(Blocks.I[139 + 124 - 192 + 120]);
        sea_lantern = getRegisteredBlock(Blocks.I[166 + 54 - 215 + 187]);
        standing_banner = getRegisteredBlock(Blocks.I[128 + 152 - 146 + 59]);
        wall_banner = getRegisteredBlock(Blocks.I[102 + 109 - 80 + 63]);
        red_sandstone = getRegisteredBlock(Blocks.I[154 + 79 - 213 + 175]);
        red_sandstone_stairs = getRegisteredBlock(Blocks.I[187 + 164 - 255 + 100]);
        double_stone_slab2 = (BlockSlab)getRegisteredBlock(Blocks.I[144 + 69 - 169 + 153]);
        stone_slab2 = (BlockSlab)getRegisteredBlock(Blocks.I[80 + 19 + 32 + 67]);
    }
}
