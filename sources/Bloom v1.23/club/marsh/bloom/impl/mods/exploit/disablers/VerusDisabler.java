package club.marsh.bloom.impl.mods.exploit.disablers;

import club.marsh.bloom.api.module.Mode;
import club.marsh.bloom.api.module.Module;
import club.marsh.bloom.impl.events.PacketEvent;
import club.marsh.bloom.impl.events.UpdateEvent;
import club.marsh.bloom.api.value.BooleanValue;
import club.marsh.bloom.api.value.Value;
import com.google.common.eventbus.Subscribe;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.util.BlockPos;

import java.util.Deque;
import java.util.concurrent.ConcurrentLinkedDeque;

public class VerusDisabler extends Mode {
	BooleanValue scaffold = new BooleanValue("Scaffold",true, () -> this.canBeUsed());
	BooleanValue movement = new BooleanValue("Movement (WIP)",true, () -> this.canBeUsed());
	public boolean pendingTeleport = false;
	private final Deque<Packet<?>> packetDeque = new ConcurrentLinkedDeque<>();
	private int currentTicks;

	public VerusDisabler(Module original, String name, Value mode) {
		super(original, name, mode);
		registerValues(scaffold,movement);
	}


	@Override
	public void onDisable() {
		if (!this.canBeUsed()) return;
	}

	@Override
	public void onEnable() {
		if (!this.canBeUsed()) return;

	}


	@Subscribe
	public void onPacket(PacketEvent e) {
		if (!this.canBeUsed()) return;
		//this just fixes the packet for scaffold LOL
		if (mc.thePlayer != null && mc.thePlayer.ticksExisted == 0) {
			currentTicks = 0;
			packetDeque.clear();
		}
		if (e.getPacket() instanceof C08PacketPlayerBlockPlacement && scaffold.isOn()) {
			C08PacketPlayerBlockPlacement packet = (C08PacketPlayerBlockPlacement) (e.getPacket());
			//idk how this even flags any client tho?
			packet.stack = null;
			packet.facingX = packet.facingZ = 0;
			packet.facingY = packet.getPlacedBlockDirection() != 1 ? 0 : 0.5f;
			e.setPacket(packet);
		} else if (e.getPacket() instanceof C03PacketPlayer && movement.isOn()) {
			C03PacketPlayer c03 = (C03PacketPlayer) (e.getPacket());
			mc.getNetHandler().addToSendQueueSilent(new C08PacketPlayerBlockPlacement(new BlockPos(mc.thePlayer), 1, mc.thePlayer.getHeldItem(), 0f, 1f, 0f));
			if (!c03.isMoving() && !c03.getRotating())
				e.setCancelled(true);
		} else if (e.getPacket() instanceof S08PacketPlayerPosLook && movement.isOn()) {
            S08PacketPlayerPosLook s08 = (S08PacketPlayerPosLook) (e.getPacket());
			if (mc.thePlayer.getDistance(s08.getX(),s08.getY(),s08.getZ()) < 10 && mc.thePlayer.getDistance(s08.getX(),s08.getY(),s08.getZ()) > 0.5) {
				mc.getNetHandler().addToSendQueueSilent(new C06PacketPlayerPosLook(s08.getX(),s08.getY()-0.025,s08.getZ(),s08.getYaw(),s08.getPitch(),false));
				e.setCancelled(true);
			} else if (mc.thePlayer.getDistance(s08.getX(),s08.getY(),s08.getZ()) <= 1) {
				mc.getNetHandler().addToSendQueueSilent(new C06PacketPlayerPosLook(mc.thePlayer.posX,mc.thePlayer.posY,mc.thePlayer.posZ,s08.getYaw(),s08.getPitch(),false));
				e.setCancelled(true);
			}
		} else if (e.getPacket() instanceof C00PacketKeepAlive && movement.isOn()) {
			C00PacketKeepAlive keepAlive = (C00PacketKeepAlive) (e.getPacket());
			keepAlive.key = -(keepAlive.key-1);
		} else if (e.getPacket() instanceof C0FPacketConfirmTransaction && movement.isOn()) {
			packetDeque.add(e.getPacket());
			//e.setCancelled(true);
		} else if (e.getPacket() instanceof C0BPacketEntityAction) {
			C0BPacketEntityAction entityAction = (C0BPacketEntityAction) (e.getPacket());
			if (entityAction.getAction() == C0BPacketEntityAction.Action.STOP_SPRINTING || entityAction.getAction() == C0BPacketEntityAction.Action.START_SPRINTING || entityAction.getAction() == C0BPacketEntityAction.Action.STOP_SNEAKING|| entityAction.getAction() == C0BPacketEntityAction.Action.START_SNEAKING)
				e.setCancelled(true);
		}
	}

	@Subscribe
	public void onUpdate(UpdateEvent e) {
		if(!this.canBeUsed()) return;
		if (currentTicks >= 200) {
			while (packetDeque.size() > 0)
				mc.getNetHandler().addToSendQueueSilent(packetDeque.poll());
			currentTicks = 0;
		} else currentTicks++;
		if (mc.thePlayer.ticksExisted % 3 == 0) {
			//original.addMessage("Kill 1 Verus!!!");
			mc.getNetHandler().addToSendQueueSilent(new C03PacketPlayer.C04PacketPlayerPosition(e.x,e.y - 900,e.z,!mc.theWorld.isAirBlock(new BlockPos(mc.thePlayer).add(0,-900,0))));
		}
	}


}
