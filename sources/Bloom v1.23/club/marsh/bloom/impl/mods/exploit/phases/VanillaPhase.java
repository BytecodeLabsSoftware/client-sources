package club.marsh.bloom.impl.mods.exploit.phases;

import club.marsh.bloom.api.module.Mode;
import club.marsh.bloom.api.module.Module;
import club.marsh.bloom.impl.events.CollideEvent;
import club.marsh.bloom.impl.events.UpdateEvent;
import club.marsh.bloom.impl.utils.movement.MovementUtils;
import club.marsh.bloom.api.value.Value;
import com.google.common.eventbus.Subscribe;
import net.minecraft.block.Block;
import net.minecraft.block.BlockAir;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.util.BlockPos;
import net.minecraft.util.MathHelper;

public class VanillaPhase extends Mode {


	public VanillaPhase(Module original, String name, Value mode) {
		super(original, name, mode);
	}

	@Subscribe
	public void onUpdate(UpdateEvent e) {
		if (!this.canBeUsed()) return;
		//if (!mc.theWorld.getBlockState(new BlockPos(mc.thePlayer.posX,mc.thePlayer.posY,mc.thePlayer.posZ)).getBlock().isFullBlock() || !mc.thePlayer.isCollidedHorizontally)
		//	return;
		if ((mc.thePlayer.isCollidedHorizontally || insideBlock())) {
			MovementUtils.setPosition(MovementUtils.getBaseSpeed());
			mc.thePlayer.motionX = 0;
			mc.thePlayer.motionY = mc.thePlayer.movementInput.jump ? 0.42 : mc.thePlayer.movementInput.sneak ? -0.42 : 0;
			mc.thePlayer.motionZ = 0;
			mc.thePlayer.onGround = false;
			e.ground = false;
		}
	}

	public boolean insideBlock() {
		AxisAlignedBB axisAlignedBB = mc.thePlayer.getEntityBoundingBox();
		for (int x = MathHelper.floor_double(axisAlignedBB.minX); x < MathHelper.floor_double(axisAlignedBB.maxX) + 1; ++x) {
			for (int y = MathHelper.floor_double(axisAlignedBB.minY); y < MathHelper.floor_double(axisAlignedBB.maxY) + 1; ++y) {
				for (int z = MathHelper.floor_double(axisAlignedBB.minZ); z < MathHelper.floor_double(axisAlignedBB.maxZ) + 1; ++z) {
					final Block block = mc.theWorld.getBlockState(new BlockPos(x, y, z)).getBlock();
					if (block != null && !(block instanceof BlockAir)) {
						return true;
					}
				}
			}
		}
		return false;
	}

	@Subscribe
	public void onCollide(CollideEvent e) {
		if (this.canBeUsed() && (mc.thePlayer.isCollidedHorizontally || insideBlock())) {
			double x = e.getPos().getX();
			double y = e.getPos().getY();
			double z = e.getPos().getZ();
			e.setBoundingBox(AxisAlignedBB.fromBounds(-50, -1, -50, 50, 1.0F, 50).offset(x, y - 10, z));
		}
	}

}
