package club.marsh.bloom.impl.mods.exploit;

import club.marsh.bloom.Bloom;
import club.marsh.bloom.api.module.Category;
import club.marsh.bloom.api.module.Module;
import club.marsh.bloom.impl.events.PacketEvent;
import club.marsh.bloom.impl.events.UpdateEvent;
import club.marsh.bloom.impl.mods.combat.KillAura;
import club.marsh.bloom.impl.ui.hud.impl.BalanceComponent;
import com.google.common.eventbus.Subscribe;
import org.lwjgl.input.Keyboard;


public class TickBase extends Module {
	public long balance, lastPacket;

	public TickBase() {
		super("Tick Base",Keyboard.KEY_NONE,Category.EXPLOIT);
	}
	@Override
	public void onEnable() {
		balance = lastPacket = 0;
	}

	@Override
	public void onDisable() {
		mc.timer.timerSpeed = 1f;
	}

	@Subscribe
	public void onUpdate(UpdateEvent e) {
		BalanceComponent balanceGrabber = (BalanceComponent) (Bloom.INSTANCE.hudDesigner.components.stream().filter((comp) -> comp.getName() == "Balance").findFirst().orElse(null));
		if (balanceGrabber.balance < -500) {
			if (KillAura.target != null || mc.thePlayer.hurtTime != 0) {
				mc.timer.timerSpeed = 1f;
				if (balanceGrabber.balance < -1000 && mc.thePlayer.isSwingInProgress) {
					try {
						Thread.sleep(2L);
						mc.runTick();
					} catch (Exception exception) {
						exception.printStackTrace();
					}
					mc.timer.timerSpeed =  0.075f;
				}
			}

		}
		if (shouldDecreaseBalance())
			mc.timer.timerSpeed = balanceDecreaseTimer();
	}
	public float balanceDecreaseTimer() {
		return 0.265f;
	}
	public boolean shouldDecreaseBalance() {
		return !(mc.thePlayer.movementInput.moveForward != 0 || mc.thePlayer.movementInput.moveStrafe != 0) && KillAura.target == null;
	}

	@Subscribe
	public void onPacket(PacketEvent event) {

	}
}
