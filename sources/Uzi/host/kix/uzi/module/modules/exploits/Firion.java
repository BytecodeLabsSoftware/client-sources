package host.kix.uzi.module.modules.exploits;

import com.darkmagician6.eventapi.SubscribeEvent;
import host.kix.uzi.events.UpdateEvent;
import host.kix.uzi.module.Module;
import net.minecraft.block.Block;
import net.minecraft.block.BlockAir;
import net.minecraft.block.BlockLiquid;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.potion.Potion;
import net.minecraft.util.BlockPos;
import net.minecraft.util.MathHelper;

/**
 * Created by Kix on 5/29/2017.
 * Made for the eclipse project.
 */
public class Firion extends Module {

    private final Potion[] effects = {Potion.moveSlowdown, Potion.digSlowdown, Potion.hunger, Potion.weakness, Potion.poison, Potion.wither};

    public Firion() {
        super("Firion", 0, Category.EXPLOITS);
    }

    @SubscribeEvent
    public void updateGame(UpdateEvent event) {
        if (mc.thePlayer.isPotionActive(Potion.blindness)) {
            mc.thePlayer.removePotionEffect(Potion.blindness.getId());
        }
        if (mc.thePlayer.isPotionActive(Potion.confusion)) {
            mc.thePlayer.removePotionEffect(Potion.confusion.getId());
        }

        if ((mc.thePlayer.onGround) && (!this.isInLiquid()) && (!this.isOnLiquid())) {
            for (Potion effect : effects) {
                if (mc.thePlayer.isPotionActive(effect)) {
                    for (int index = 0; index <= 20; index++) {
                        mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer(mc.thePlayer.onGround));
                    }
                }
            }
        }
    }

    public boolean isInLiquid() {
        if (mc.thePlayer == null)
            return false;
        boolean inLiquid = false;
        int y = (int) mc.thePlayer.boundingBox.minY;
        for (int x = MathHelper.floor_double(mc.thePlayer.boundingBox.minX); x < MathHelper
                .floor_double(mc.thePlayer.boundingBox.maxX) + 1; x++) {
            for (int z = MathHelper.floor_double(mc.thePlayer.boundingBox.minZ); z < MathHelper
                    .floor_double(mc.thePlayer.boundingBox.maxZ) + 1; z++) {
                Block block = mc.theWorld.getBlockState(new BlockPos(x, y, z))
                        .getBlock();
                if ((block != null) && (!(block instanceof BlockAir))) {
                    if (!(block instanceof BlockLiquid))
                        return false;
                    inLiquid = true;
                }
            }
        }
        return inLiquid;
    }

    public boolean isOnLiquid() {
        if (mc.thePlayer == null)
            return false;
        boolean onLiquid = false;
        int y = (int) mc.thePlayer.boundingBox.offset(0.0D, -0.01D, 0.0D).minY;
        for (int x = MathHelper.floor_double(mc.thePlayer.boundingBox.minX); x < MathHelper
                .floor_double(mc.thePlayer.boundingBox.maxX) + 1; x++) {
            for (int z = MathHelper.floor_double(mc.thePlayer.boundingBox.minZ); z < MathHelper
                    .floor_double(mc.thePlayer.boundingBox.maxZ) + 1; z++) {
                Block block = mc.theWorld.getBlockState(new BlockPos(x, y, z))
                        .getBlock();
                if ((block != null) && (!(block instanceof BlockAir))) {
                    if (!(block instanceof BlockLiquid))
                        return false;
                    onLiquid = true;
                }
            }
        }
        return onLiquid;
    }
}
