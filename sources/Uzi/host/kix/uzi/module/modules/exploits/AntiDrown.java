package host.kix.uzi.module.modules.exploits;

import com.darkmagician6.eventapi.SubscribeEvent;
import host.kix.uzi.events.SentPacketEvent;
import host.kix.uzi.module.Module;
import net.minecraft.block.Block;
import net.minecraft.block.BlockAir;
import net.minecraft.block.BlockLiquid;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.util.BlockPos;
import net.minecraft.util.MathHelper;

/**
 * Created by Kix on 6/2/2017.
 * Made for the eclipse project.
 */
public class AntiDrown extends Module {

    public AntiDrown() {
        super("AntiDrown", 0, Category.EXPLOITS);
    }

    @SubscribeEvent
    public void sendPacket(SentPacketEvent event) {
        if (event.getPacket() instanceof C03PacketPlayer) {
            if (canSaveOnDrownabilityAndBreathingAbility()) {
                event.setCancelled(true);
            }
        }
    }

    private boolean canSaveOnDrownabilityAndBreathingAbility() {
        boolean usingItem = mc.thePlayer.isUsingItem();
        boolean swinging = mc.thePlayer.isSwingInProgress;
        boolean moving = mc.thePlayer.motionX != 0 || !mc.thePlayer.isCollidedVertically || mc.gameSettings.keyBindJump.getIsKeyPressed() || mc.thePlayer.motionZ != 0;
        return isInLiquid() && !usingItem && !swinging && !moving;
    }

    public boolean isInLiquid() {
        if (mc.thePlayer == null)
            return false;
        boolean inLiquid = false;
        int y = (int) mc.thePlayer.boundingBox.minY;
        for (int x = MathHelper.floor_double(mc.thePlayer.boundingBox.minX); x < MathHelper
                .floor_double(mc.thePlayer.boundingBox.maxX) + 1; x++) {
            for (int z = MathHelper.floor_double(mc.thePlayer.boundingBox.minZ); z < MathHelper
                    .floor_double(mc.thePlayer.boundingBox.maxZ) + 1; z++) {
                Block block = mc.theWorld.getBlockState(new BlockPos(x, y, z))
                        .getBlock();
                if ((block != null) && (!(block instanceof BlockAir))) {
                    if (!(block instanceof BlockLiquid))
                        return false;
                    inLiquid = true;
                }
            }
        }
        return inLiquid;
    }


}
