package tech.dort.dortware.impl.modules.exploit;

import com.google.common.eventbus.Subscribe;
import net.minecraft.entity.Entity;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C03PacketPlayer;
import niggerlib.mc.protocol.packet.ingame.client.ClientChatPacket;
import niggerlib.mc.protocol.packet.ingame.client.player.ClientPlayerPositionRotationPacket;
import tech.dort.dortware.Client;
import tech.dort.dortware.api.module.Module;
import tech.dort.dortware.api.module.ModuleData;
import tech.dort.dortware.api.property.impl.EnumValue;
import tech.dort.dortware.api.property.impl.interfaces.INameable;
import tech.dort.dortware.impl.events.PacketEvent;
import tech.dort.dortware.impl.events.UpdateEvent;
import tech.dort.dortware.impl.modules.exploit.disabler.MPTest;
import tech.dort.dortware.impl.utils.networking.ServerUtils;
import tech.dort.dortware.impl.utils.player.ChatUtil;

import javax.vecmath.Vector3d;

public class Disabler extends Module {

    public final EnumValue<Mode> mode = new EnumValue<>("Mode", this, Disabler.Mode.values());
    public MPTest mpTest = new MPTest();

    public Disabler(ModuleData moduleData) {
        super(moduleData);
        register(mode);
    }

    @Subscribe
    public void onUpdate(UpdateEvent event) {
        if (mc.theWorld != null) {
            for (Entity entity : mc.theWorld.loadedEntityList) {
                if (entity.getName().equals(mpTest.spectatorIGN == null ? "" : mpTest.spectatorIGN)) {
                    entity.setInvisible(true);
                    mc.theWorld.removeEntity(entity);
                    return;
                }
            }
        }
    }

    @Subscribe
    public void onPacket(PacketEvent event) {
        if (event.getPacket() instanceof C00PacketKeepAlive) {
            C00PacketKeepAlive packetKeepAlive = event.getPacket();
            packetKeepAlive.key -= 35;
        }

        if (event.getPacket() instanceof C03PacketPlayer) {
            C03PacketPlayer packetPlayer = event.getPacket();

            double x = mc.thePlayer.posX;
            double y = mc.thePlayer.posY;
            double z = mc.thePlayer.posZ;
            float yaw = mc.thePlayer.rotationYaw;
            float pitch = mc.thePlayer.rotationPitch;
            boolean ground = packetPlayer.onGround;

            if (packetPlayer.isMoving()) {
                x = packetPlayer.getPositionX();
                y = packetPlayer.getPositionY();
                z = packetPlayer.getPositionZ();
            }

            try {
                mpTest.client.getPacketProtocol().getOutgoingId(ClientPlayerPositionRotationPacket.class);
                if (mc.thePlayer.ticksExisted % 30 == 0) {
                    mpTest.client.getSession().send(new ClientChatPacket("/spec " + mc.thePlayer.getName()));
                }
                double posX = mc.thePlayer.posX - mpTest.clientPos.x;
                double posY = mc.thePlayer.posY - mpTest.clientPos.y;
                double posZ = mc.thePlayer.posZ - mpTest.clientPos.z;
                double xyz = Math.pow(posX, 2) + Math.pow(posY, 2) + Math.pow(posZ, 2);
                if (Math.sqrt(xyz) < 40) {
                    mpTest.clientPos = new Vector3d(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ);
                    mpTest.client.getSession().send(new ClientPlayerPositionRotationPacket(ground, x, y, z, yaw, pitch));
                }
            } catch (Exception ignored) {
            }
        }
    }

    @Override
    public void onDisable() {
        Client.INSTANCE.getEventBus().unregister(mpTest);
        try {
            mpTest.client.getSession().disconnect("Disconnected");
        } catch (Exception ignore) {

        }
    }

    @Override
    public void onEnable() {
        Client.INSTANCE.getEventBus().register(mpTest);
        try {
            if (ServerUtils.onServer("mineplex.com")) {
                String[] userInfo = tech.dort.dortware.Client.getSpectatorAlt();
                if (userInfo == null) {
                    ChatUtil.displayChatMessage("\2477[\u00a7cMPD\u00a7c\2477] \247f Please set a spectator account using .setspectator email:pass");
                    this.toggle();
                    return;
                }
                mpTest.update();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public String getSuffix() {
        return " \2477" + mode.getValue().getDisplayName();
    }

    public enum Mode implements INameable {
        MINEPLEXEU("Mineplex EU Proxy"), MINEPLEXUS("Mineplex US Proxy");

        private final String name;

        Mode(String name) {
            this.name = name;
        }

        @Override
        public String getDisplayName() {
            return name;
        }
    }
}